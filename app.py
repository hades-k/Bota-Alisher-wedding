import streamlit as st
import pandas as pd
import os
import base64
import datetime

# --- Page Configuration ---
st.set_page_config(
    page_title="–ë–æ—Ç–∞ & –ê–ª–∏—à–µ—Ä",
    page_icon="üíç",
    layout="centered" # Use centered layout for better focus
)

# --- File for RSVPs ---
RSVP_FILE = "rsvps.csv"

# --- Function to get base64 encoded image for CSS ---
def get_base64_of_bin_file(bin_file):
    try:
        with open(bin_file, 'rb') as f:
            data = f.read()
        return base64.b64encode(data).decode()
    except FileNotFoundError:
        return None

# --- Load Custom CSS for Star Wars Theme ---
def load_css():
    encoded_image = get_base64_of_bin_file("background.png")
    st.markdown(f"""
    <style>
    .stApp {{
    background-image: url("data:image/png;base64,{encoded_image}");
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    position: relative;
    overflow: hidden;
    }}

    .stApp > * {{
        position: relative;
        z-index: 1;
    }}
    
    .stApp > header {{ 
        background-color: transparent; 
    }}

    /* Main container styling */
    .main .block-container {{
        background-color: rgba(0, 0, 0, 0.85);
        border: 2px solid #FFD700;
        box-shadow: 0 0 30px 10px #FFD700;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
    }}

    /* Typography */
    h1 {{
        color: #FFD700;
        text-shadow: 0 0 5px #000, 0 0 10px #000;
        font-weight: 800; /* Extra Bold */
        margin-top: 24px; /* Top padding */
    }}
    h2 {{
        color: #FFD700; /* Changed from #fff for consistency */
        text-shadow: 0 0 5px #000, 0 0 10px #000;
        font-weight: 400; /* Normal */
    }}
    h3, p, label, .st-emotion-cache-16txtl3 {{
        color: #FFD700; /* Changed from #feda4a for contrast */
        text-shadow: 0 0 5px #000, 0 0 10px #000;
    }}

    /* Buttons */
    .stButton>button {{
        border: 2px solid #FFD700;
        background-color: #FFD700;
        color: #000;
        padding: 10px 24px;
        border-radius: 5px;
        font-weight: bold;
        text-transform: uppercase;
        width: 100%;
    }}
    .stButton>button:hover {{
        background-color: #000;
        color: #FFD700;
    }}

    /* st.info alignment */
    .st-emotion-cache-1c7y2kd {{
        text-align: center;
    }}
    
    </style>
    
    """, unsafe_allow_html=True)

# --- Language Content ---
content = {
    "ru": {
        "title": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Å–≤–∞–¥—å–±—É",
        "intro1": '–ö–æ–≥–¥–∞ –¥–≤–µ –∑–≤–µ–∑–¥—ã –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è –Ω–∞ –æ—Ä–±–∏—Ç–µ —Å—É–¥—å–±—ã - —Ä–æ–∂–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –º–∏—Ä.',
        'intro2': '–ú–∏—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–∏–ª–∞ - —ç—Ç–æ –ª—é–±–æ–≤—å, –∞ –ø—É—Ç—å –æ–¥–∏–Ω - –≤–º–µ—Å—Ç–µ',
        "header": "–ë–æ—Ç–∞–≥–æ–∑ –∏ –ê–ª–∏—à–µ—Ä",
        "alliance": '''–ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –≤–∞—Å —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å –Ω–∏–º–∏ –¥–µ–Ω—å,
–≤ –∫–æ—Ç–æ—Ä—ã–π –∏—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω—É—Ç –æ–¥–Ω–∏–º —Ü–µ–ª—ã–º.''',
        "date": "6 —Å–µ–Ω—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞",
        "time": "17:00",
        "address_intro": "–†–µ—Å—Ç–æ—Ä–∞–Ω Portofino, –ê—Å—Ç–∞–Ω–∞. –ü—Ä–æ—Å–ø–µ–∫—Ç –¢—É—Ä–∞–Ω, 27",
        "address_placeholder": "–î—Ä–µ—Å—Å-–∫–æ–¥: —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, —Å –ª—ë–≥–∫–∏–º —Å–∏—è–Ω–∏–µ–º ‚ú®",
        "rsvp_intro": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–µ –ø—Ä–∏—Å—É–¥—Å—Ç–≤–∏–µ –¥–æ 20 –∞–≤–≥—É—Å—Ç–∞ (–µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)",
        "form_name": "–í–∞—à–µ –∏–º—è (–ò–º–µ–Ω–∞ –≥–æ—Å—Ç–µ–π)",
        "form_attendance": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ?",
        "option_yes": "–î–∞, —è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—é—Å—å –∫ –ê–ª—å—è–Ω—Å—É",
        "option_no": "–ù–µ—Ç, —è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ò–º–ø–µ—Ä–∏–∏",
        "submit_button": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç",
        "thank_you": "–°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω –≤ –≥–æ–ª–æ–∫—Ä–æ–Ω.",
        "error_name": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —é–Ω—ã–π –ø–∞–¥–∞–≤–∞–Ω.",
        "countdown_text": "–î–æ –Ω–∞—à–µ–π —Å–≤–∞–¥—å–±—ã –æ—Å—Ç–∞–ª–æ—Å—å:",
        "days": "–¥–Ω–µ–π",
        "hours": "—á–∞—Å–æ–≤",
        "minutes": "–º–∏–Ω—É—Ç",
        "wedding_started": "–°–≤–∞–¥—å–±–∞ –Ω–∞—á–∞–ª–∞—Å—å!",
        "final_message": "–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å –≤–∞–º–∏‚Ä¶ –ø—Ä–∞–∑–¥–Ω–∏–∫."
    },

    "kz": {
        "title": "“Æ–π–ª–µ–Ω—É —Ç–æ–π—ã–Ω–∞ —à–∞“õ—ã—Ä—É",
        "intro1": '–ï–∫—ñ –∂“±–ª–¥—ã–∑ —Ç–∞“ì–¥—ã—Ä –æ—Ä–±–∏—Ç–∞—Å—ã–Ω–¥–∞ —Ç–æ“ì—ã—Å“õ–∞–Ω–¥–∞ - –∂–∞“£–∞ ”ô–ª–µ–º –¥“Ø–Ω–∏–µ–≥–µ –∫–µ–ª–µ–¥—ñ.',
        'intro2': '–ö“Ø—à - –º–∞—Ö–∞–±–±–∞—Ç, –∞–ª –∂–æ–ª –±—ñ—Ä–µ—É - –±—ñ—Ä–≥–µ.''',
        "header": "–ë–æ—Ç–∞–≥–æ–∑ –±–µ–Ω –ê–ª–∏—à–µ—Ä",
        "alliance": '''—Å—ñ–∑–¥–µ—Ä–¥—ñ ”©–∑–¥–µ—Ä—ñ–Ω—ñ“£ “ì–∞–ª–∞–º–¥–∞—Ä—ã –±—ñ—Ä—Ç“±—Ç–∞—Å –±–æ–ª–∞—Ç—ã–Ω –∫“Ø–Ω–¥—ñ
–±—ñ—Ä–≥–µ ”©—Ç–∫—ñ–∑—É–≥–µ —à–∞“õ—ã—Ä–∞–¥—ã.''',
        "date": "2025 –∂—ã–ª“ì—ã 6 “õ—ã—Ä–∫“Ø–π–µ–∫",
        "time": "17:00",
        "address_intro": "Portofino –º–µ–π—Ä–∞–º—Ö–∞–Ω–∞—Å—ã, –ê—Å—Ç–∞–Ω–∞. –¢“±—Ä–∞–Ω –¥–∞“£“ì—ã–ª—ã, 27",
        "address_placeholder": "–î—Ä–µ—Å—Å-–∫–æ–¥: —Å–∞–ª—Ç–∞–Ω–∞—Ç—Ç—ã, –∂–µ“£—ñ–ª –∂–∞—Ä“õ—ã—Ä–∞“ì–∞–Ω ‚ú®",
        "rsvp_intro": "“ö–∞—Ç—ã—Å—É—ã“£—ã–∑–¥—ã 20 —Ç–∞–º—ã–∑“ì–∞ –¥–µ–π—ñ–Ω —Ä–∞—Å—Ç–∞“£—ã–∑",
        "form_name": "–°—ñ–∑–¥—ñ“£ –µ—Å—ñ–º—ñ“£—ñ–∑ (“ö–æ–Ω–∞“õ—Ç–∞—Ä–¥—ã“£ –µ—Å—ñ–º–¥–µ—Ä—ñ)",
        "form_attendance": "“ö–∞—Ç—ã—Å—É–¥—ã —Ä–∞—Å—Ç–∞–π—Å—ã–∑ –±–∞?",
        "option_yes": "–ò”ô, –º–µ–Ω –ê–ª—å—è–Ω—Å“õ–∞ “õ–æ—Å—ã–ª–∞–º—ã–Ω",
        "option_no": "–ñ–æ“õ, –º–µ–Ω –ò–º–ø–µ—Ä–∏—è –∂–∞“ì—ã–Ω–¥–∞–º—ã–Ω",
        "submit_button": "–ñ–∞—É–∞–ø—Ç—ã –∂—ñ–±–µ—Ä—É",
        "thank_you": "–†–∞—Ö–º–µ—Ç! –°—ñ–∑–¥—ñ“£ –∂–∞—É–∞–±—ã“£—ã–∑ –≥–æ–ª–æ–∫—Ä–æ–Ω“ì–∞ –∂–∞–∑—ã–ª–¥—ã.",
        "error_name": "–ï—Å—ñ–º—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑, –∂–∞—Å –ø–∞–¥–∞–≤–∞–Ω.",
        "countdown_text": "–¢–æ–π—ã–º—ã–∑“ì–∞ “õ–∞–ª–¥—ã:",
        "days": "–∫“Ø–Ω",
        "hours": "—Å–∞“ì–∞—Ç",
        "minutes": "–º–∏–Ω—É—Ç",
        "wedding_started": "–¢–æ–π –±–∞—Å—Ç–∞–ª–¥—ã!",
        "final_message": "–°—ñ–∑–±–µ–Ω –±—ñ—Ä–≥–µ... –º–µ—Ä–µ–∫–µ –±–æ–ª—Å—ã–Ω."
    }
}

# --- Main App Logic ---
load_css()

# Wedding Date for Countdown
wedding_date = datetime.datetime(2025, 9, 6, 17, 0)

def get_countdown(wedding_date, lang_content):
    now = datetime.datetime.now()
    time_left = wedding_date - now

    if time_left.total_seconds() < 0:
        return lang_content["wedding_started"]
    else:
        days = time_left.days
        hours = time_left.seconds // 3600
        minutes = (time_left.seconds % 3600) // 60
        seconds = time_left.seconds % 60
        return f"{days} {lang_content["days"]}, {hours} {lang_content["hours"]}, {minutes} {lang_content["minutes"]}"

# Language Selection
lang_choice = st.sidebar.radio("Language / –¢—ñ–ª", ["–†—É—Å—Å–∫–∏–π", "“ö–∞–∑–∞“õ"], label_visibility="collapsed")
lang = "ru" if lang_choice == "–†—É—Å—Å–∫–∏–π" else "kz"

t = content[lang]

# --- Display Invitation Details ---
st.header(t["title"])
st.markdown(t['intro1'])
st.markdown(t['intro2'])
st.subheader(t["header"])
st.write(t["alliance"])
st.write ('')
st.subheader(f'{t["date"]} | {t["time"]}')
st.write('')# Spacer
st.write(t["address_intro"])
st.write(t["address_placeholder"])
st.write("") # Spacer



# --- RSVP Form ---
st.header(t["rsvp_intro"])

if 'form_submitted' not in st.session_state:
    st.session_state.form_submitted = False

if st.session_state.form_submitted:
    st.success(t["thank_you"])
else:
    with st.form(key='rsvp_form'):
        guest_name = st.text_input(label=t["form_name"])
        attendance = st.radio(
            label=t["form_attendance"],
            options=[t["option_yes"], t["option_no"]],
            index=0
        )
        submitted = st.form_submit_button(label=t["submit_button"])

        if submitted:
            if not guest_name.strip():
                st.error(t["error_name"])
            else:
                try:
                    response_data = pd.DataFrame([{{
                        "Name": guest_name.strip(),
                        "Attendance": attendance,
                        "Timestamp": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    }}])

                    if not os.path.exists(RSVP_FILE):
                        # Create the file with headers if it doesn't exist
                        pd.DataFrame(columns=["Name", "Attendance", "Timestamp"]).to_csv(RSVP_FILE, index=False)
                    response_data.to_csv(RSVP_FILE, mode='a', header=False, index=False)
                    
                    st.session_state.form_submitted = True
                    st.rerun()

                except Exception as e:
                    st.error(f"An error occurred: {{e}}")
                    st.exception(e)

st.subheader(t["countdown_text"])
st.write(get_countdown(wedding_date, t))
st.write("") # Spacer

st.subheader(t["final_message"])