import streamlit as st
import pandas as pd
import os
import base64
import datetime

# --- Page Configuration ---
st.set_page_config(
    page_title="–ë–æ—Ç–∞ & –ê–ª–∏—à–µ—Ä",
    page_icon="üíç",
    layout="centered" # Use centered layout for better focus
)

# --- File for RSVPs ---
RSVP_FILE = "rsvps.csv"

# --- Function to get base64 encoded image for CSS ---
def get_base64_of_bin_file(bin_file):
    try:
        with open(bin_file, 'rb') as f:
            data = f.read()
        return base64.b64encode(data).decode()
    except FileNotFoundError:
        return None

# --- Load Custom CSS for Star Wars Theme ---
def load_css():
    background_image_path = "background.png"
    encoded_image = get_base64_of_bin_file(background_image_path)
    if encoded_image:
        background_style = f"background-image: url(data:image/png;base64,{encoded_image});"
    else:
        background_style = "background-color: #000;"

    st.markdown(f"""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap');

    .stApp {{
        {background_style}
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        position: relative;
        overflow: hidden;
    }}

    /* Dark overlay to improve readability */
    .stApp::before {{
        content: "";
        position: absolute;
        top: 0; left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        z-index: 0;
    }}
    .stApp > * {{
        position: relative;
        z-index: 1;
    }}


    .stApp > header {{ 
        background-color: transparent; 
    }}

    /* Main container styling */
    .main .block-container {{
        background-color: rgba(0, 0, 0, 0.85);
        border: 2px solid #feda4a;
        box-shadow: 0 0 30px 10px #feda4a;
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
    }}

    /* Typography */
    h1, h2, h3, p, label, .st-emotion-cache-16txtl3 {{
        font-family: 'Orbitron', sans-serif;
        color: #feda4a;
        text-shadow: 0 0 5px #000, 0 0 10px #000;
    }}
    h1 {{ text-transform: uppercase; }}
    h2 {{ color: #fff; }}

    /* Buttons */
    .stButton>button {{
        border: 2px solid #feda4a;
        background-color: #feda4a;
        color: #000;
        padding: 10px 24px;
        border-radius: 5px;
        font-weight: bold;
        text-transform: uppercase;
        width: 100%;
    }}
    .stButton>button:hover {{
        background-color: #000;
        color: #feda4a;
    }}

    /* Intro text */
    .intro-text {{
        font-size: 1.2em;
        line-height: 1.6;
        text-align: center;
        transform: perspective(300px) rotateX(15deg);
        margin-bottom: 2em;
    }}

    /* Optional: Animated starfield background (commented out)
    .stApp::after {{
        content: "";
        position: fixed;
        top: 0; left: 0;
        width: 100%;
        height: 100%;
        background: url('https://raw.githubusercontent.com/Julian-Nash/starfield-animation/main/starfield-bg.gif') repeat;
        background-size: cover;
        opacity: 0.08;
        z-index: -2;
        animation: drift 60s linear infinite;
    }}
    @keyframes drift {{
        from {{ background-position: 0 0; }}
        to {{ background-position: 10000px 0; }}
    }}
    */

    </style>
    """, unsafe_allow_html=True)

# --- Language Content ---
content = {
    "ru": {
        "title": "–ê–ª–∏—à–µ—Ä & –ë–æ—Ç–∞–≥–æ–∑",
        "intro": "–î–∞–≤–Ω—ã–º-–¥–∞–≤–Ω–æ, –≤ –¥–∞–ª–µ–∫–æ–π-–¥–∞–ª–µ–∫–æ–π –≥–∞–ª–∞–∫—Ç–∏–∫–µ...",
        "header": "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –°–≤–∞–¥—å–±—É",
        "alliance": "–° –≤–µ–ª–∏–∫–æ–π —Ä–∞–¥–æ—Å—Ç—å—é –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –∞–ª—å—è–Ω—Å—É!",
        "date": "06.09.2025",
        "time": "17:00",
        "address_intro": "–ù–∞—à–∞ —Å–∞–≥–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:",
        "address_placeholder": "Portofino. –ü—Ä–æ—Å–ø–µ–∫—Ç –¢—É—Ä–∞–Ω, 27",
        "rsvp_intro": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ 20.08.2025",
        "form_name": "–í–∞—à–µ –∏–º—è (–ò–º–µ–Ω–∞ –≥–æ—Å—Ç–µ–π)",
        "form_attendance": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ?",
        "option_yes": "–î–∞, —è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—é—Å—å –∫ –ê–ª—å—è–Ω—Å—É",
        "option_no": "–ù–µ—Ç, —è –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ò–º–ø–µ—Ä–∏–∏",
        "submit_button": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç",
        "thank_you": "–°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω –≤ –≥–æ–ª–æ–∫—Ä–æ–Ω.",
        "error_name": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —é–Ω—ã–π –ø–∞–¥–∞–≤–∞–Ω.",
        "countdown_text": "–î–æ –Ω–∞—à–µ–π —Å–≤–∞–¥—å–±—ã –æ—Å—Ç–∞–ª–æ—Å—å:",
        "days": "–¥–Ω–µ–π",
        "hours": "—á–∞—Å–æ–≤",
        "minutes": "–º–∏–Ω—É—Ç",
        "wedding_started": "–°–≤–∞–¥—å–±–∞ –Ω–∞—á–∞–ª–∞—Å—å!"
    },
    "kz": {
        "title": "”ò–ª—ñ—à–µ—Ä & –ë–æ—Ç–∞–≥–æ–∑",
        "intro": "–ï—Ä—Ç–µ, –µ—Ä—Ç–µ –∑–∞–º–∞–Ω–¥–∞, –∞–ª—ã—Å-–∞–ª—ã—Å –≥–∞–ª–∞–∫—Ç–∏–∫–∞–¥–∞...",
        "header": "“Æ–π–ª–µ–Ω—É —Ç–æ–π—ã–Ω–∞ —à–∞“õ—ã—Ä—É",
        "alliance": "–°—ñ–∑–¥–µ—Ä–¥—ñ –±—ñ–∑–¥—ñ“£ –æ–¥–∞“ì—ã–º—ã–∑–¥—ã“£ “õ“±—Ä—ã–ª—É —Å–∞–ª—Ç–∞–Ω–∞—Ç—ã–Ω–∞ —à–∞“õ—ã—Ä–∞–º—ã–∑!",
        "date": "06.09.2025",
        "time": "17:00",
        "address_intro": "–ë—ñ–∑–¥—ñ“£ –¥–∞—Å—Ç–∞–Ω—ã–º—ã–∑ –º—ã–Ω–∞ –º–µ–∫–µ–Ω-–∂–∞–π–¥–∞ –∂–∞–ª“ì–∞—Å–∞–¥—ã:",
        "address_placeholder": "Portofino. –¢—É—Ä–∞–Ω –î–∞“£“ì—ã–ª—ã, 27",
        "rsvp_intro": "“ö–∞—Ç—ã—Å—É—ã“£—ã–∑–¥—ã 20.08.2025 –¥–µ–π—ñ–Ω —Ä–∞—Å—Ç–∞“£—ã–∑",
        "form_name": "–°—ñ–∑–¥—ñ“£ –µ—Å—ñ–º—ñ“£—ñ–∑ (“ö–æ–Ω–∞“õ—Ç–∞—Ä–¥—ã“£ –µ—Å—ñ–º–¥–µ—Ä—ñ)",
        "form_attendance": "“ö–∞—Ç—ã—Å—É–¥—ã —Ä–∞—Å—Ç–∞–π—Å—ã–∑ –±–∞?",
        "option_yes": "–ò”ô, –º–µ–Ω –ê–ª—å—è–Ω—Å“õ–∞ “õ–æ—Å—ã–ª–∞–º—ã–Ω",
        "option_no": "–ñ–æ“õ, –º–µ–Ω –ò–º–ø–µ—Ä–∏—è –∂–∞“ì—ã–Ω–¥–∞–º—ã–Ω",
        "submit_button": "–ñ–∞—É–∞–ø—Ç—ã –∂—ñ–±–µ—Ä—É",
        "thank_you": "–†–∞—Ö–º–µ—Ç! –°—ñ–∑–¥—ñ“£ –∂–∞—É–∞–±—ã“£—ã–∑ –≥–æ–ª–æ–∫—Ä–æ–Ω“ì–∞ –∂–∞–∑—ã–ª–¥—ã.",
        "error_name": "–ï—Å—ñ–º—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑, –∂–∞—Å –ø–∞–¥–∞–≤–∞–Ω.",
        "countdown_text": "–¢–æ–π—ã–º—ã–∑“ì–∞ “õ–∞–ª–¥—ã:",
        "days": "–∫“Ø–Ω",
        "hours": "—Å–∞“ì–∞—Ç",
        "minutes": "–º–∏–Ω—É—Ç",
        "wedding_started": "–¢–æ–π –±–∞—Å—Ç–∞–ª–¥—ã!"
    }
}

# --- Main App Logic ---
load_css()

# Wedding Date for Countdown
wedding_date = datetime.datetime(2025, 9, 6, 17, 0)

def get_countdown(wedding_date, lang_content):
    now = datetime.datetime.now()
    time_left = wedding_date - now

    if time_left.total_seconds() < 0:
        return lang_content["wedding_started"]
    else:
        days = time_left.days
        hours = time_left.seconds // 3600
        minutes = (time_left.seconds % 3600) // 60
        seconds = time_left.seconds % 60
        return f"{days} {lang_content["days"]}, {hours} {lang_content["hours"]}, {minutes} {lang_content["minutes"]}"

# Language Selection
lang_choice = st.sidebar.radio("Language / –¢—ñ–ª", ["–†—É—Å—Å–∫–∏–π", "“ö–∞–∑–∞“õ"], label_visibility="collapsed")
lang = "ru" if lang_choice == "–†—É—Å—Å–∫–∏–π" else "kz"

t = content[lang]

# --- Display Invitation Details ---
st.title(t["title"])
st.header(t["header"])
st.markdown(f'<p class="intro-text">{t["intro"]}</p>', unsafe_allow_html=True)
st.write(t["alliance"])
st.subheader(f'{t["date"]} | {t["time"]}')
st.write("") # Spacer
st.write(t["address_intro"])
st.info(t["address_placeholder"])
st.write("") # Spacer

# --- Countdown ---
st.subheader(t["countdown_text"])
st.write(get_countdown(wedding_date, t))
st.write("") # Spacer

# --- RSVP Form ---
st.header(t["rsvp_intro"])

if 'form_submitted' not in st.session_state:
    st.session_state.form_submitted = False

if st.session_state.form_submitted:
    st.success(t["thank_you"])
else:
    with st.form(key='rsvp_form'):
        guest_name = st.text_input(label=t["form_name"])
        attendance = st.radio(
            label=t["form_attendance"],
            options=[t["option_yes"], t["option_no"]],
            index=0
        )
        submitted = st.form_submit_button(label=t["submit_button"])

        if submitted:
            if not guest_name.strip():
                st.error(t["error_name"])
            else:
                try:
                    response_data = pd.DataFrame([{{
                        "Name": guest_name.strip(),
                        "Attendance": attendance,
                        "Timestamp": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    }}])

                    if not os.path.exists(RSVP_FILE):
                        # Create the file with headers if it doesn't exist
                        pd.DataFrame(columns=["Name", "Attendance", "Timestamp"]).to_csv(RSVP_FILE, index=False)
                    response_data.to_csv(RSVP_FILE, mode='a', header=False, index=False)
                    
                    st.session_state.form_submitted = True
                    st.rerun()

                except Exception as e:
                    st.error(f"An error occurred: {{e}}")
